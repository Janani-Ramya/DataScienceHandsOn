# -*- coding: utf-8 -*-
"""Comcast.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZrCyzk6mMRu6dJyI_bprxh82AQO5BHXH
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

data = pd.read_csv("/content/sample_data/Comcast_telecom_complaints_data.csv")

(data.head(5))

data['Date_Index'] = pd.to_datetime(data['Date_month_year'])

data = data.set_index(data['Date_Index'])

data['Date_Index'].value_counts().head(5)

data['Date_Index'].value_counts().plot()

data.groupby(pd.Grouper(freq='M')).size()

data.groupby(pd.Grouper(freq='M')).size().plot()

data['Customer Complaint'].value_counts(dropna=False)[:9]

data['Customer Complaint'].value_counts(dropna=False)[:9].plot.bar()

# Listing unique status types
data.Status.unique()

# Applying Lambda
data['Current_Status'] = data['Status'].apply(lambda present_status: "Open" if present_status=="Open" or present_status=="Pending" else "Closed")

state_wise_complaints = data.groupby(['State','Current_Status']).size().unstack().fillna(0.0)

# Plotting a stacked bar chart horizontally
state_wise_complaints.plot(kind = 'barh', figsize=(30,40), stacked='true')

#State with maximum complaint
data.groupby(['State']).size().sort_values(ascending=False).to_frame().rename({0: "Total number of complaints"}, axis=1).head(1)

state_wise_complaints.sort_values('Closed',axis = 0,ascending=False)

#Which state has the highest percentage of resolved complaints
state_wise_complaints['Resolved_complaint_percentage'] = state_wise_complaints['Closed']/state_wise_complaints['Closed'].sum()*100
state_wise_complaints['Unresolved_complaint_percentage'] = state_wise_complaints['Open']/state_wise_complaints['Open'].sum()*100
state_wise_complaints.sort_values('Unresolved_complaint_percentage',axis = 0,ascending=False).head(1)

df_unresolved = data.groupby(['State',"Current_Status"]).size().unstack().sort_values(by='Open', ascending =False)
df_unresolved['Unresolved'] = df_unresolved['Open']/df_unresolved['Open'].sum()*100
df_unresolved

#Provide the percentage of complaints resolved till date, which were received through the Internet and customer care calls.
df = data.groupby(['Received Via',"Current_Status"]).size().unstack()
df['Resolved'] = df['Closed']/df['Closed'].sum()*100
df

"""Provide a table with the frequency of complaint types.

Which complaint types are maximum i.e., around internet, network issues, or across any other domains.
"""

df.plot(kind="bar", figsize=(8,8))